"""Vulnerability hunting workflow for bug bounty hunting."""

from flask import request

import logger
from utils.registry import workflow

logger = logger.get_logger(__name__)


@workflow()
def create_vulnerability_hunting_workflow():
    """Create vulnerability hunting workflow prioritized by impact."""
    # Import here to avoid circular imports
    from server import BugBountyTarget, bugbounty_manager

    data = request.get_json()

    domain = data["domain"]
    priority_vulns = data.get("priority_vulns", ["rce", "sqli", "xss", "idor", "ssrf"])
    bounty_range = data.get("bounty_range", "unknown")

    logger.info(f"Creating vulnerability hunting workflow for {domain}")

    # Create bug bounty target
    target = BugBountyTarget(
        domain=domain, priority_vulns=priority_vulns, bounty_range=bounty_range
    )

    # Generate vulnerability hunting workflow
    workflow = bugbounty_manager.create_vulnerability_hunting_workflow(target)

    logger.info(f"Vulnerability hunting workflow created for {domain}")

    return workflow
